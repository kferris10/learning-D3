require(ggplot2)
?stat_bin2d
require(MockJury)
require(heplots)
data(MockJury)
lm(Years ~ 1, data = MockJury)
p_no <- 42 / 205
p_yes <- 34261
# Wald cis
p_no <- 42 / 205
p_yes <- 34 / 261
p_no + c(-1, 1) * (qnorm(.975) * sqrt(p_no * (1 - p_no) / 205) + .5 / 205)
# Wald cis
p_no <- 42 / 205
p_yes <- 34 / 261
p_no + c(-1, 1) * (qnorm(.975) * sqrt(p_no * (1 - p_no) / 205) + .5 / 205)
p_yes + c(-1, 1) * (qnorm(.975) * sqrt(p_yes * (1 - p_yes) / 261) + .5 / 261)
?prop.test
prop.test(n = 205, p = p_no)
prop.test(x = 42, n = 205)
prop.test(34, 261)
?binom.test
binom.test(34, 261)
binom.test(x = 42, n = 205)
binom.test(x = 42, n = 205)
binom.test(34, 261)
65085/986342
664 / 986342
115 / 986342
56 / 65085
608 / 921257
19 / 65085
96 / 921257
(1 - .05 ^ (1 / 5000))
11/31721
11/31721/5
(11+5+6) / ((31721+34542+19844) * 5) * 100000
46 / 2200
54 / 2600
6/900
(.0067 * 60000 + .0038 * 45000 + .05*20000+.11*15000) / 140000
(.0013 * 60000 + .0063 * 45000 + .02*20000+.076*15000)/140000
require(heplots)
data(MockJury)
boxplot(Years ~ Attr, data = MockJury)
lm1 <- lm(Years ~ Attr, data = MockJury)
summary(lm1)
lm1 <- lm(Years ~ Attr - 1, data = MockJury)
summary(lm1)
lm2 <- lm(Years ~ Attr, data = MockJury)
summary(lm2)
summary(MockJury$Years)
# Wald CIs
p_no <- 42 / 205
p_yes <- 34 / 261
p_no + c(-1, 1) * (qnorm(.975) * sqrt(p_no * (1 - p_no) / 205) + .5 / 205)
p_yes + c(-1, 1) * (qnorm(.975) * sqrt(p_yes * (1 - p_yes) / 261) + .5 / 261)
# score CIs
prop.test(x = 42, n = 205)
prop.test(34, 261)
# exact CIs
binom.test(x = 42, n = 205)
binom.test(34, 261)
11/(31721 ∗ 5) ∗ 100000
1 - (1 - .05) ^(1 / 5000)
devtools::install_github("lmullen/cartographer", build_vignettes = TRUE)
library(cartographer)
cartographer(region = "united states") %>%
tile_layer()
cartographer(region = "africa") %>%
tile_layer()
cartographer(region = "liberia") %>%
tile_layer()
?boxplot
data(InsectSprays)
?InsectSprays
head(InsectSprays)
summary(InsectSprays)
boxplot(count ~ spray, data = InsectSprays)
require(dplyr)
is <- InsectSprays %>% tbl_df()
is %>% group_by(spray) %>% summarise(mean(count), sd(count))
is %>% group_by(spray) %>% summarise(mean(count), sd(log(count)))
summary(InsectSprays)
is
InsectSprays
p_no <- 42 / 205
p_yes <- 34 / 261
p_no + c(-1, 1) * (qnorm(.975) * sqrt(p_no * (1 - p_no) / 205) + .5 / 205)
p_yes + c(-1, 1) * (qnorm(.975) * sqrt(p_yes * (1 - p_yes) / 261) + .5 / 261)
prop.test(x = 42, n = 205)
prop.test(34, 261)
# exact CIs
binom.test(x = 42, n = 205)
binom.test(34, 261)
c(31721,33955,6910,8078) * c(7.4,3.6,39.2,19.8)
sum(c(31721,33955,6910,8078) * c(7.4,3.6,39.2,19.8)) / 100000
7.4*31721/100000
sum(c(31721,33955,6910,8078) * c(7.4,3.6,39.2,19.8)) / 100000*5
75 / 39.39
(4*3+10*7+6*5) / (4+10+6)
??InsectSprays
data(InsectSprays)
sprays <- InsectSprays[InsectSprays$count != 0, ]
boxplot(count ~ spray, data = sprays)
boxplot(log(count) ~ spray, data = sprays)
data(InsectSprays)  # load the data
boxplot(count ~ spray, data = InsectSprays)
lm1 <- lm(count ~ spray, data = InsectSprays)
summary(lm1)
lm2 <- lm(count ~ spray, data = InsectSprays)
summary(lm2)
require(slidify)
setwd("temp")
author("ts", use_git = F)
slidify("index.RMd")
browseURL("index.html")
slidify("index.RMd")
slidify("index.RMd")
setwd("..")
author("ts2", use_git= F)
slidify("index.RMd")
slidify("index.RMd")
browseURL("index.html")
setwd("~/")
library(highlight)
library(highlightr)
tan(c(0, pi/2, pi, 3*pi/2))
data(baseball, package = "plyr")
head(baseball)
data(ozone, package = "plyr")
str(ozone)
library(fastR)
install.packages("fastR")
data(bugs, package = "fastR")
head(bugs)
par(mfrow = c(2,2))
plot(lm(NumTrap ~ Color, data = bugs))
0.00140-0.00010
21054/292323
.00669 - .00413
1 / .0013
1 / .00256
0.00140/0.0013
0.00140/0.001
.0014/(1-.0014) / (.001/(1-.001))
.00669 / .00413
(.0069 / (1-.0069))(.00413 / (1-.00413))
(.0069 / (1-.0069))/(.00413 / (1-.00413))
26.1 / 11.7
26.1/11.7
682/843/127*466
161/843/339*466
OR_{LC} = .0014/(1-.0014) / (.0001/(1-.0001))
.0014/(1-.0014) / (.0001/(1-.0001))
.00669 - .00413
682/161
127/339
161/682/339*127
161/843/339*446
161/843/339*466
.006699 / (1-.00669)/.00413*(1-.00413)
data(chickwts)
dim(chickwts)
head(chickwts)
summary(chickwts)
?chickwts
data(chickwts)
boxplot(weight ~ feed, data = chickwts)
lm1 <- lm(weight ~ feed, data = chickwts)
par(mfrow = c(2,2))
plot(lm1)
par(mfrow = c(1,1))
anova(lm1)
newdata <- data.frame(feed = unique(chickwts$feed))
newdata$weight <- predict(lm1, newdata)
newdata
xtable(newdata)
library(xtable)
newdata <- data.frame(feed = unique(chickwts$feed))
newdata$weight <- predict(lm1, newdata)
xtable(newdata)
library(xtable)
newdata <- data.frame(feed = unique(chickwts$feed))
newdata$weight <- predict(lm1, newdata)
xtable(newdata)
library(xtable)
newdata <- data.frame(feed = unique(chickwts$feed))
newdata$weight <- predict(lm1, newdata)
xtable(setNames(newdata, c("Feed", "Estimated Weight")))
#Multiple Comparison
require(multcomp)
pairs<-glht(lm1, linfct=mcp(feed="Tukey"))
confint(pairs)
old.par <- par(mai=c(1.5,2.5,1,1))
plot(pairs)
library(xtable)
newdata <- data.frame(feed = unique(chickwts$feed))
newdata$weight <- predict(lm1, newdata)
xtable(setNames(newdata, c("Feed", "Estimated Weight")))
require(Sleuth2)
data(case0201)
case0201
require(beanplot)
par(mfrow = c(1, 2))
beanplot(Humerus ~ Status, data = bumpus, method = "jitter",
log = "", col = 7, ylab = "Humerus Length")
1
boxplot(Humerus ~ Status, data = bumpus, ylab = "Difference")
par(mfrow = c(1, 1))
require(Sleuth2)
data(case0201)
bumpus <- case0201
require(beanplot)
par(mfrow = c(1, 2))
beanplot(Humerus ~ Status, data = bumpus, method = "jitter",
log = "", col = 7, ylab = "Humerus Length")
1
boxplot(Humerus ~ Status, data = bumpus, ylab = "Difference")
par(mfrow = c(1, 1))
require(beanplot)
par(mfrow = c(1, 2))
beanplot(Humerus ~ Status, data = bumpus, method = "jitter",
log = "", col = 7, ylab = "Humerus Length")
1
boxplot(Humerus ~ Status, data = bumpus, ylab = "Difference")
par(mfrow = c(1, 1))
require(beanplot)
par(mfrow = c(1, 2))
beanplot(Humerus ~ Status, data = bumpus, method = "jitter",
log = "", col = 7, ylab = "Humerus Length")
1
boxplot(Humerus ~ Status, data = bumpus)
par(mfrow = c(1, 1))
favstats(Humerus ~ Status, data = bumpus)
mosaic::favstats(Humerus ~ Status, data = bumpus)
library(mosaic)
mosaic::favstats(Humerus ~ Status, data = bumpus)
B <- 1000
Tstar <- matrix(NA, nrow = B)
for(b in 1:B) {
Tstar[b] <- diffmean(Humerus ~ shuffle(Status), data = bumpus)
}
hist(Tstar, xlab = "", main = "Permuted Distribution of Differences")
abline(v = Tobs, col = "red", lwd = 2)
Tobs <- diffmean(Humerus ~ Status, data = bumpus)
B <- 1000
Tstar <- matrix(NA, nrow = B)
for(b in 1:B) {
Tstar[b] <- diffmean(Humerus ~ shuffle(Status), data = bumpus)
}
hist(Tstar, xlab = "", main = "Permuted Distribution of Differences")
abline(v = Tobs, col = "red", lwd = 2)
pdata(abs(Tobs), abs(Tstar), lower.tail = F)
t.test(Humerus ~ Status, data = bumpus)
t.test(Humerus ~ Status, data = bumpus, var.equal = T)
lm1 <- lm(weight ~ feed, data = chickwts)
par(mfrow = c(1,4))
plot(lm1)
par(mfrow = c(1,1))
library(xtable)
newdata <- data.frame(feed = unique(chickwts$feed))
newdata$weight <- predict(lm1, newdata)
xtable(setNames(newdata, c("Feed", "Estimated Weight")))
?xtable
library(gdata)
library(dplyr)
library(lubridate)
x <- read.xls(file.choose(), header = T, stringsAsFactors = F) %>% tbl_df()
x
glimpse(x)
table(x$X)
library(gdata)
library(dplyr)
library(lubridate)
library(ggplot2)
library(stringr)
?str_replace_all
dat <- x %>%
mutate(BDAY = ymd(BDAY),
sal = str_replace_all("\\$", "", AVG.Annual.Salary) %>% as.numeric())
glimpse(dat)
dat <- x %>%
mutate(BDAY = ymd(BDAY),
sal = str_replace_all("$", "", AVG.Annual.Salary) %>% as.numeric())
dat <- x %>%
mutate(BDAY = ymd(BDAY),
sal = str_replace_all(AVG.Annual.Salary, "$", "") %>% as.numeric())
dat <- x %>%
mutate(BDAY = ymd(BDAY),
sal = str_replace_all(AVG.Annual.Salary, "\$", "") %>% as.numeric())
dat <- x %>%
mutate(BDAY = ymd(BDAY),
sal = str_replace_all(AVG.Annual.Salary, "\\$", "") %>% as.numeric())
str_replace_all("ab", "a", "d")
str_replace_all("ab$", "a", "d")
str_replace_all("ab$", "$", "d")
str_replace_all("ab$", "\\$", "d")
dat <- x %>%
mutate(BDAY = ymd(BDAY),
sal = str_replace_all(AVG.Annual.Salary, ",", "") %>% as.numeric())
dat <- x %>%
mutate(BDAY = ymd(BDAY),
sal = str_replace_all(AVG.Annual.Salary, ",", ""),
sal = str_replace_all(AVG.Annual.Salary, "\\$", ""))
glimpse(dat)
dat <- x %>%
mutate(BDAY = ymd(BDAY),
sal = str_replace_all(AVG.Annual.Salary, ",", ""),
sal = str_replace_all(sal, "\\$", ""))
glimpse(dat)
dat <- x %>%
mutate(BDAY = ymd(BDAY),
sal = str_replace_all(AVG.Annual.Salary, ",", ""),
sal = str_replace_all(sal, "\\$", "") %>% as.numeric())
dat
dat <- x %>%
mutate(BDAY = ymd(BDAY),
SAL = str_replace_all(AVG.Annual.Salary, ",", ""),
SAL = str_replace_all(SAL, "\\$", "") %>% as.numeric())
qplot(POS, SAL, data = dat, geom = "boxplot")
dat %>% filter(Last.Name == "Dalton")
dat %>% filter(Last.Name == "Dalton") %>% glimpse()
116/6
115/6
?princomp
(pc.cr <- princomp(USArrests))  # inappropriate
princomp(USArrests, cor = TRUE) # =^= prcomp(USArrests, scale=TRUE)
(pc.rob <- princomp(stackloss, covmat = MASS::cov.rob(stackloss))
)
(pc.cr <- princomp(USArrests))  # inappropriate
x <- princomp(USArrests, cor = TRUE) # =^= prcomp(USArrests, scale=TRUE)
attributes(x)
x$loadings
x$scores
plot(Comp.1 ~ Comp.2, data = x$scores)
text(Comp.1 ~ Comp.2, data = x$scores)
library(devtools)
install_github('htmlwidgets/sparkline')
require(sparkline)
sparline
sparkline
require(htmlwidgets)
createWidget
x = rnorm(20)
sparkline(x)
sparkline(x, type = 'bar')
library(dplyr)
library(rCharts)
library(lubridate)
setwd("~/School/Stat_592-D3/Homeworks/Hw3")
dat <- read.csv("pitch-speeds.csv") %>%
tbl_df() %>%
mutate(date = as.Date(date))
p1  <- nPlot(avg_speed ~ date,
data = dat,
group = 'pitcher',
type = 'lineChart')
p1$xAxis(tickFormat="#!function(d) {return d3.time.format('%b %Y')(new Date( d * 86400000 ));}!#" )
p1$chart(useInteractiveGuideline=TRUE,
forceY = c(floor(min(dat$avg_speed)), floor(max(dat$avg_speed+1))),
margin = list(left = 100))
p1$templates$script <- "http://timelyportfolio.github.io/rCharts_nvd3_templates/chartWithTitle.html"
p1$set(title = "Phillies Average Fastball Speeds in 2013")
p1
p1$save("game-speeds.html", cdn = T)
p1$publish("fastball-speeds")
p1$save("fastball-speeds.html")
